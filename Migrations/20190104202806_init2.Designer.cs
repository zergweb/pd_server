// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PdApi.Model;

namespace PdApi.Migrations
{
    [DbContext(typeof(PdDbContext))]
    [Migration("20190104202806_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PdApi.Model.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<int?>("ImageId");

                    b.Property<int>("LkStudentId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("LkStudentId");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("PdApi.Model.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("PdApi.Model.FacultySection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FacultyId");

                    b.Property<string>("Name");

                    b.Property<string>("NumberName");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("FacultySections");
                });

            modelBuilder.Entity("PdApi.Model.GalleryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LkImageId");

                    b.Property<int>("ProjectGalleryId");

                    b.HasKey("Id");

                    b.HasIndex("LkImageId");

                    b.HasIndex("ProjectGalleryId");

                    b.ToTable("GalleryImages");
                });

            modelBuilder.Entity("PdApi.Model.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FacultySectionId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FacultySectionId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PdApi.Model.LkImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alt");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("LkImage");
                });

            modelBuilder.Entity("PdApi.Model.LkProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<int?>("UserInfoId");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("PdApi.Model.LkStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<DateTime?>("DOB");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("SecondName");

                    b.Property<int?>("ThumbnailId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PdApi.Model.LkTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DOB");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("SecondName");

                    b.Property<int?>("ThumbnailId");

                    b.HasKey("Id");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("PdApi.Model.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LkStudentId");

                    b.HasKey("Id");

                    b.HasIndex("LkStudentId")
                        .IsUnique();

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("PdApi.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<string>("GitUrl");

                    b.Property<bool>("IsShow");

                    b.Property<string>("LongDesc");

                    b.Property<string>("Name");

                    b.Property<int>("PortfolioId");

                    b.Property<string>("PresentationUrl");

                    b.Property<string>("ShortDesc");

                    b.Property<int?>("ThumbnailId");

                    b.HasKey("ProjectId");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PdApi.Model.ProjectDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DocUrl");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDocs");
                });

            modelBuilder.Entity("PdApi.Model.ProjectGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("ProjectGalleries");
                });

            modelBuilder.Entity("PdApi.Model.PublicProfileConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("About");

                    b.Property<bool>("Certificates");

                    b.Property<bool>("City");

                    b.Property<bool>("DOB");

                    b.Property<bool>("LastProjects");

                    b.Property<int>("LkProfileId");

                    b.Property<bool>("Portfolio");

                    b.Property<bool>("Skills");

                    b.HasKey("Id");

                    b.HasIndex("LkProfileId");

                    b.ToTable("PublicProfileConfigs");
                });

            modelBuilder.Entity("PdApi.Model.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("PdApi.Model.SemesterArchiveItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GroupId");

                    b.Property<int>("SemesterId");

                    b.Property<int>("SubjectId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SemesterArchive");
                });

            modelBuilder.Entity("PdApi.Model.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("PdApi.Model.StudentSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LkStudentId");

                    b.Property<int>("SkillId");

                    b.HasKey("Id");

                    b.HasIndex("LkStudentId");

                    b.HasIndex("SkillId");

                    b.ToTable("StudentSkills");
                });

            modelBuilder.Entity("PdApi.Model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("PdApi.Model.SubjectTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GroupId");

                    b.Property<int>("LkTeacherId");

                    b.Property<int>("SubjectId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("LkTeacherId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectTeachers");
                });

            modelBuilder.Entity("PdApi.Model.Certificate", b =>
                {
                    b.HasOne("PdApi.Model.LkImage", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("PdApi.Model.LkStudent", "Student")
                        .WithMany("Certificates")
                        .HasForeignKey("LkStudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.FacultySection", b =>
                {
                    b.HasOne("PdApi.Model.Faculty", "Faculty")
                        .WithMany("FacultySections")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.GalleryImage", b =>
                {
                    b.HasOne("PdApi.Model.LkImage", "LkImage")
                        .WithMany()
                        .HasForeignKey("LkImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.ProjectGallery", "ProjectGallery")
                        .WithMany("GalleryImages")
                        .HasForeignKey("ProjectGalleryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.Group", b =>
                {
                    b.HasOne("PdApi.Model.FacultySection", "FacultySection")
                        .WithMany()
                        .HasForeignKey("FacultySectionId");
                });

            modelBuilder.Entity("PdApi.Model.LkProfile", b =>
                {
                    b.HasOne("PdApi.Model.LkStudent", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");
                });

            modelBuilder.Entity("PdApi.Model.LkStudent", b =>
                {
                    b.HasOne("PdApi.Model.Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("PdApi.Model.LkImage", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");
                });

            modelBuilder.Entity("PdApi.Model.LkTeacher", b =>
                {
                    b.HasOne("PdApi.Model.LkImage", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");
                });

            modelBuilder.Entity("PdApi.Model.Portfolio", b =>
                {
                    b.HasOne("PdApi.Model.LkStudent", "LkStudent")
                        .WithOne("Portfolio")
                        .HasForeignKey("PdApi.Model.Portfolio", "LkStudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.Project", b =>
                {
                    b.HasOne("PdApi.Model.Portfolio", "Portfolio")
                        .WithMany("Projects")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.LkImage", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");
                });

            modelBuilder.Entity("PdApi.Model.ProjectDoc", b =>
                {
                    b.HasOne("PdApi.Model.Project", "Project")
                        .WithMany("ProjectDocs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.ProjectGallery", b =>
                {
                    b.HasOne("PdApi.Model.Project", "Project")
                        .WithOne("Gallery")
                        .HasForeignKey("PdApi.Model.ProjectGallery", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.PublicProfileConfig", b =>
                {
                    b.HasOne("PdApi.Model.LkProfile", "LkProfile")
                        .WithMany()
                        .HasForeignKey("LkProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.SemesterArchiveItem", b =>
                {
                    b.HasOne("PdApi.Model.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.StudentSkill", b =>
                {
                    b.HasOne("PdApi.Model.LkStudent", "LkStudent")
                        .WithMany("StudentSkills")
                        .HasForeignKey("LkStudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.Skill", "Skill")
                        .WithMany("StudentSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdApi.Model.SubjectTeacher", b =>
                {
                    b.HasOne("PdApi.Model.Group", "Group")
                        .WithMany("Subjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.LkTeacher", "LkTeacher")
                        .WithMany("SubjectTeachers")
                        .HasForeignKey("LkTeacherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdApi.Model.Subject", "Subject")
                        .WithMany("SubjectTeachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
